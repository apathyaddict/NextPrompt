{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/models/user.js"],"sourcesContent":["import { Schema, model, models } from \"mongoose\";\n\nconst UserSchema = new Schema({\n  email: {\n    type: String,\n    unique: [true, \"Email already exists!\"],\n    required: [true, \"Email is required!\"],\n  },\n  username: {\n    type: String,\n    required: [true, \"Username is required!\"],\n    match: [\n      /^(?=.{8,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$/,\n      \"Username invalid, it should contain 8-20 alphanumeric letters and be unique!\",\n    ],\n  },\n  image: {\n    type: String,\n  },\n});\n\n//check if user exists if not create new\nconst User = models.User || model(\"User\", UserSchema);\n\nexport default User;\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,aAAa,IAAI,2CAAA,CAAA,SAAM,CAAC;IAC5B,OAAO;QACL,MAAM;QACN,QAAQ;YAAC;YAAM;SAAwB;QACvC,UAAU;YAAC;YAAM;SAAqB;IACxC;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAwB;QACzC,OAAO;YACL;YACA;SACD;IACH;IACA,OAAO;QACL,MAAM;IACR;AACF;AAEA,wCAAwC;AACxC,MAAM,OAAO,2CAAA,CAAA,SAAM,CAAC,IAAI,IAAI,CAAA,GAAA,2CAAA,CAAA,QAAK,AAAD,EAAE,QAAQ;uCAE3B"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/utils/database.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nlet isConnected = false; // track the connection\n\nexport const connectToDB = async () => {\n  mongoose.set(\"strictQuery\", true);\n\n  if (isConnected) {\n    console.log(\"MongoDB is already connected\");\n    return;\n  }\n\n  try {\n    await mongoose.connect(process.env.MONGODB_URI, {\n      dbName: \"share_prompt\",\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    });\n\n    isConnected = true;\n\n    console.log(\"MongoDB connected\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":[],"mappings":";;;;;;AAEA,IAAI,cAAc,OAAO,uBAAuB;AAEzC,MAAM,cAAc;IACzB,2CAAA,CAAA,UAAQ,CAAC,GAAG,CAAC,eAAe;IAE5B,IAAI,aAAa;QACf,QAAQ,GAAG,CAAC;QACZ;IACF;IAEA,IAAI;QACF,MAAM,2CAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;YAC9C,QAAQ;YACR,iBAAiB;YACjB,oBAAoB;QACtB;QAEA,cAAc;QAEd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC;IACd;AACF"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/api/auth/[...nextauth]/route.js"],"sourcesContent":["import NextAuth from \"next-auth/next\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport User from \"@models/user\";\nimport { connectToDB } from \"@utils/database\";\n\nconst handler = NextAuth({\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    }),\n  ],\n  async session({ session }) {\n    // store the user id from MongoDB to session\n    const sessionUser = await User.findOne({ email: session.user.email });\n    session.user.id = sessionUser._id.toString();\n\n    return session;\n  },\n  async signIn({ profile }) {\n    try {\n      await connectToDB();\n\n      const userExists = await User.findOne({ email: profile.email });\n\n      if (!userExists) {\n        await User.create({\n          email: profile.email,\n          username: profile.name.replace(\" \", \"\").toLowerCase(),\n          image: profile.picture,\n        });\n      }\n\n      return true;\n    } catch (error) {\n      console.log(\"Error checking if user exists: \", error.message);\n      return false;\n    }\n  },\n});\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;;;;;;;;;;AAKA,MAAM,UAAU,CAAA,GAAA,+IAAA,CAAA,UAAQ,AAAD,EAAE;IACvB,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;KACD;IACD,MAAM,SAAQ,EAAE,OAAO,EAAE;QACvB,4CAA4C;QAC5C,MAAM,cAAc,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE,OAAO,QAAQ,IAAI,CAAC,KAAK;QAAC;QACnE,QAAQ,IAAI,CAAC,EAAE,GAAG,YAAY,GAAG,CAAC,QAAQ;QAE1C,OAAO;IACT;IACA,MAAM,QAAO,EAAE,OAAO,EAAE;QACtB,IAAI;YACF,MAAM,CAAA,GAAA,mHAAA,CAAA,cAAW,AAAD;YAEhB,MAAM,aAAa,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;gBAAE,OAAO,QAAQ,KAAK;YAAC;YAE7D,IAAI,CAAC,YAAY;gBACf,MAAM,gHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;oBAChB,OAAO,QAAQ,KAAK;oBACpB,UAAU,QAAQ,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,WAAW;oBACnD,OAAO,QAAQ,OAAO;gBACxB;YACF;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC,mCAAmC,MAAM,OAAO;YAC5D,OAAO;QACT;IACF;AACF"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}